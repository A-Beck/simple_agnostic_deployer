---
- name: Step 005.1 - Create NFS Backend
  hosts: support
  gather_facts: False
  become: yes
  tasks:
    - when: install_nfs|bool
      block:
      - name: Create user vols
        shell: "mkdir -p /srv/nfs/user-vols/vol{1..{{user_vols}}}"
      - name: chmod the user vols
        shell: "chmod -R 777 /srv/nfs/user-vols"
  tags:
    - step005
    - step005.1
    - create_nfs_backend

- name: Step 005.1 - Create NFS PVs in OpenShift
  hosts: bastions
  run_once: true
  gather_facts: False
  become: yes
  tags:
    - step005
    - step005.1
    - create_nfs_PVs
  tasks:
    - when: install_nfs|bool
      block:
      - name: Set NFS host facts
        set_fact:
          nfs_host: "{{ groups['support']|sort|first }}"
          pv_size: "{{user_vols_size}}"
          persistentVolumeReclaimPolicy: Recycle

      - name: Generate user vol PV file
        template:
          src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/userpvs.j2"
          dest: "/root/userpvs-{{ env_type }}-{{ guid }}.yml"
        tags:
          - gen_user_vol_pv

      - shell: 'oc create -f /root/userpvs-{{ env_type }}-{{ guid }}.yml || oc replace -f /root/userpvs-{{ env_type }}-{{ guid }}.yml'
        tags:
          - create_user_pv

- name: Step 005.1 - Fix NFS PV Recycling for OCP 3.7 and newer
  gather_facts: False
  become: yes
  hosts:
    - nodes
    - infranodes
    - masters
  tags:
    - step005
    - step005.1
  tasks:
    - name: Pull ose-recycler Image
      command: docker pull registry.access.redhat.com/openshift3/ose-recycler:latest
      register: pullr
      retries: 5
      delay: 10
      until: pullr is succeeded
      when:
      - osrelease is version_compare('3.7', '>=')
      - install_nfs|bool

    - name: Tag ose-recycler Image (for OCP 3.7 - 3.9)
      command: >
        docker tag registry.access.redhat.com/openshift3/ose-recycler:latest
        registry.access.redhat.com/openshift3/ose-recycler:v{{ osrelease }}
      when:
      - osrelease is version_compare('3.7', '>=')
      - osrelease is version_compare('3.10', '<')
      - install_nfs|bool

    - name: Tag ose-recycler Image (for OCP 3.10+)
      command: >
        docker tag registry.access.redhat.com/openshift3/ose-recycler:latest
        registry.access.redhat.com/openshift3/ose-recycler:v1.10.0
      when:
      - osrelease is version_compare('3.10', '>=')
      - install_nfs|bool

- name: Step 005.2 - Run env-specific infrastructure configurations
  hosts: masters
  run_once: true
  become: yes
  gather_facts: False
  tags:
    - step005
    - step005.2
    - env-specific
    - env-specific_infra
  tasks:
    - name: Command to enable the wildcard routes in the OCP cluster for 3scale
      shell: "oc set env dc/router ROUTER_ALLOW_WILDCARD_ROUTES=true -n default"

    - name: Give administrative user cluster-admin privileges
      command: "oc adm policy add-cluster-role-to-user cluster-admin {{ admin_user }}"

    - name: Check for admin_project project
      command: "oc get project {{admin_project}}"
      register: result
      changed_when: false
      ignore_errors: true

    - name: Create admin_project project (for OCP before 3.10)
      command: "oc adm new-project {{admin_project}} --admin {{admin_user}} --node-selector='env=infra'"
      when:
      - result | failed
      - osrelease is version_compare("3.10", "<")

    - name: Create admin_project project (for OCP 3.10+)
      command: "oc adm new-project {{admin_project}} --admin {{admin_user}} --node-selector='env=infra'"
      when:
      - result | failed
      - osrelease is version_compare("3.10", ">=")

    - name: Make admin_project project network global
      command: "oc adm pod-network make-projects-global {{admin_project}}"
      when: ovs_plugin == "multitenant"

    - name: Set admin_project SCC for anyuid
      command: "oc adm policy add-scc-to-group anyuid system:serviceaccounts:{{admin_project}}"

    - name: Add capabilities within anyuid which is not really ideal
      command: "oc patch scc/anyuid --patch '{\"requiredDropCapabilities\":[\"MKNOD\",\"SYS_CHROOT\"]}'"
      ignore_errors: true

    - name: Set Node Selector to empty for project openshift-template-service-broker
      shell: oc annotate namespace openshift-template-service-broker openshift.io/node-selector="" --overwrite
      ignore_errors: true
      when:
        - osrelease is version_compare('3.7', '>=')
        - osrelease is version_compare('3.10', '<')

    - when: remove_self_provisioners|bool
      block:
      - name: Set clusterRoleBinding auto-update to false
        command: oc annotate -n default --overwrite clusterrolebinding.rbac self-provisioners rbac.authorization.kubernetes.io/autoupdate=false

      - name: Remove system:authenticated from self-provisioner role
        command: "oc adm policy remove-cluster-role-from-group self-provisioner system:authenticated system:authenticated:oauth"
        ignore_errors: true

      - name: create our own OPENTLC-PROJECT-PROVISIONERS
        command: "oc adm groups new OPENTLC-PROJECT-PROVISIONERS"
        ignore_errors: true

      - name: allow OPENTLC-PROJECT-PROVISIONERS members to provision their own projects
        command: "oc adm policy add-cluster-role-to-group self-provisioner OPENTLC-PROJECT-PROVISIONERS"

- name: Step 005.3 - Install OpenShift Components
  hosts: masters
  run_once: true
  gather_facts: False
  become: yes
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
  roles:
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/install-nexus"
        desired_project: "{{admin_project}}"
        nexus_version: "3"
      when: install_nexus|bool
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/install-aws-broker"
      when: install_aws_broker|bool
    - role: "{{ ANSIBLE_REPO_PATH }}/roles/openshift-ansible-broker"
      when: install_openshiftapb|bool


- name: Step 005.x - Gather facts
  hosts:
    - all
  gather_facts: true
  tags:
    - step005
    - step005.5
    - ocp_report
- name: Step 005.x - Generate reports
  hosts: localhost
  connection: local
  become: false
  tags:
    - ocp_report
    - step005
    - step005.x
  vars:
    env_all_hosts: all
  tasks:
    - name: get repo version used to deploy
      command: git rev-parse HEAD
      args:
        chdir: "{{ ANSIBLE_REPO_PATH }}"
      register: ansible_agnostic_deployer_head

    - name: Gather ec2 facts
      ec2_remote_facts:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        region: "{{ aws_region_final|d(aws_region) }}"
        filters:
          instance-state-name: running
          "tag:Project": "{{project_tag}}"
      when:
        - ocp_report|bool
        - cloud_provider == 'ec2'
    - name: Generate report
      template:
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/ocp_report.adoc.j2"
        dest: "{{ ANSIBLE_REPO_PATH }}/workdir/ocp_report_{{ env_type }}-{{ guid }}.adoc"
      when:
        - ocp_report|bool
        - cloud_provider == 'ec2'
